<Window x:Class="MyToDo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyToDo"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.5*"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Button Background="Blue"/>
                            <Grid Grid.Row="1">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Border Background="LightBlue"/>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.32*"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Background="#219afd" Margin="5"/>
                <Border Background="#60b721" Grid.Column="1" Margin="5"/>
                <Border Background="#ffa000" Grid.Column="2" Margin="5"/>
                <Border Background="#30b8c4" Grid.Column="3" Margin="5"/>
                <Border Background="#ea796b" Grid.Column="4" Margin="5"/>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid Margin="5" Grid.ColumnSpan="2">
                        <DataGrid x:Name="dgTest" AutoGenerateColumns="False" CanUserAddRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Code" Binding="{Binding Code}"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                                <DataGridTemplateColumn Header="DoSomething">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Border Width="10" Height="10" Background="{Binding Code}" />
                                                <TextBlock Margin="10, 0" Text="{Binding Name}" />
                                                <Button Background="{Binding Code}" Content="{Binding Name}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Border BorderBrush="Green" BorderThickness="3" Grid.ColumnSpan="2" Margin="5"/>
                    <Grid Grid.Row="1" Margin="7">
                        <StackPanel>
                            <Slider x:Name="slider"/>
                            <TextBox Text="{Binding Name}" Margin="1"/>
                            <TextBox Text="{Binding ElementName=slider,Path=Value, Mode=OneWay}" Margin="1"/>
                            <TextBox Text="{Binding ElementName=slider,Path=Value, Mode=OneWayToSource}" Margin="1"/>
                            <TextBox Text="{Binding ElementName=slider,Path=Value, Mode=TwoWay}" Margin="1"/>
                        </StackPanel>
                    </Grid>
                    <Border BorderBrush="LightBlue" BorderThickness="2" Grid.Row="1" Margin="5"/>
                    <Grid Grid.Row="1" Grid.Column="1" Margin="5">
                        <StackPanel>
                            <TextBox Text="{Binding Name}" Margin="1" />
                            <TextBox Text="{Binding Title}" Margin="1" />
                            <Button Content="CommandTest" Command="{Binding ShowCommand}"/>
                        </StackPanel>
                    </Grid>
                    <Border BorderBrush="Red" BorderThickness="2" Grid.Row="1" Grid.Column="1" Margin="5"/>
                    <Border Background="Orange" Grid.Row="2" Margin="5"/>
                    <Border Background="Yellow" Grid.Row="2" Grid.Column="1" Margin="5"/>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.7*"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Margin="5">
                        <Button Width="100" Height="40" Style="{DynamicResource ButtonStyle1}">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="1"/>
                                <Button Content="2"/>
                                <Button Content="3"/>
                                <Button Content="5"/>
                            </StackPanel>
                        </Button>
                        <Button Content="Hello2" />
                        <Button Content="Hello3" />

                    </StackPanel>
                    <Border BorderBrush="BlueViolet" BorderThickness="3" Margin="5" />
                    <Grid Grid.Row="1">
                        <ListBox x:Name="lstTest" Margin="5">
                            <ListBox.ItemTemplate>
                                <DataTemplate >
                                    <StackPanel Orientation="Horizontal">
                                        <Border Width="10" Height="10" Background="{Binding Code}" />
                                        <TextBlock Margin="10, 0" Text="{Binding Name}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                    <Border BorderBrush="#b2434e" Grid.Row="1" Margin="5" BorderThickness="3"/>
                </Grid>
            </Grid>
            
        </Grid>
    </Grid>
</Window>
